{"version":3,"sources":["components/TutorialSection.jsx","components/StreamPage.jsx","components/InputSection.jsx","components/LandingPage.jsx","components/App.jsx","index.js"],"names":["TutorialSection","classes","makeStyles","theme","root","height","textAlign","alignItems","disclaimer","width","color","fontSize","disclaimerLink","guideStep","guideStepContent","marginTop","spacing","useStyles","Grid","container","direction","justify","className","Typography","component","variant","rel","href","target","StreamPage","props","useState","firstStream","currentChatInput","setCurrentChatInput","backgroundColor","streamContainer","display","padding","chatContainer","chatButton","handleFirstButton","handleSecondButton","secondStream","howManyStreams","CssBaseline","title","src","frameBorder","scrolling","allowFullScreen","id","Button","onClick","style","thirdStream","fourthStream","InputSection","isFirstMenuOpen","setIsFirstMenuOpen","firstMenuAnchorEl","setFirstMenuAnchorEl","firstStreamInput","setFirstStreamInput","isFirstStreamReady","setIsFirstStreamReady","isSecondMenuOpen","setIsSecondMenuOpen","secondMenuAnchorEl","setSecondMenuAnchorEl","secondStreamInput","setSecondStreamInput","isSecondStreamReady","setIsSecondStreamReady","isThirdMenuOpen","setIsThirdMenuOpen","thirdMenuAnchorEl","setThirdMenuAnchorEl","thirdStreamInput","setThirdStreamInput","isThirdStreamReady","setIsThirdStreamReady","isFourthMenuOpen","setIsFourthMenuOpen","fourthMenuAnchorEl","setFourthMenuAnchorEl","fourthStreamInput","setFourthStreamInput","isFourthStreamReady","setIsFourthStreamReady","streamCount","setStreamCount","streamInputHeader","addStreamIcon","streamInput","inputButton","fontWeight","streamButton","IconButton","event","currentTarget","Popper","open","anchorEl","TextField","disabled","onChange","value","length","alert","render","document","getElementById","LandingPage","App","ReactDOM"],"mappings":"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","file":"static/js/main.d1b24da3.chunk.js","sourcesContent":["// IMPORT STATEMENTS\r\n\r\nimport React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n// TUTORIAL SECTION COMPONENT FUNCTION\r\n\r\nfunction TutorialSection() {\r\n\r\n    // CUSTOM MATERIAL UI STYLING\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n\r\n        root: {\r\n            height: \"100vh\",\r\n            textAlign: \"center\",\r\n            alignItems: \"center\"\r\n        },\r\n        disclaimer: {\r\n            width: \"35vw\",\r\n            color: \"#b9a3e3\",\r\n            fontSize: \"1rem\",\r\n        },\r\n        disclaimerLink: {\r\n            color: \"#b9a3e3\",\r\n            \"&:hover\": {\r\n                color: \"#6441a5\"\r\n            }\r\n        },\r\n        guideStep: {\r\n            color: \"#6441a5\",\r\n            fontSize: \"1.5rem\"\r\n        },\r\n        guideStepContent: {\r\n            color: \"#b9a3e3\",\r\n            fontSize: \"1rem\",\r\n            width: \"50vw\",\r\n            marginTop: theme.spacing(2)\r\n        }\r\n\r\n    }))\r\n\r\n    // MATERIAL UI CLASS CALLING\r\n\r\n    const classes = useStyles()\r\n\r\n    // RETURN STATEMENT\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            {/*ROOT COMPONENT*/}\r\n\r\n            <Grid container direction=\"column\" justify=\"space-evenly\" alignItems=\"center\" className={classes.root}>\r\n\r\n                {/*DISCLAIMER*/}\r\n\r\n                <Typography component=\"h1\" variant=\"h4\" className={classes.disclaimer}>\r\n                    Hello, this is a web app built by Conrado Remon for educational purposes and not for commercial use,\r\n                    however, you are able to use it if you want and you can access the source code in\r\n                    my <a rel={\"noopener noreferrer\"} href=\"https://github.com/darn0C/parallel-twitch\"\r\n                          target={\"_blank\"} className={classes.disclaimerLink}>GitHub</a>.<br/>\r\n                    This isn't built for mobile devices since viewport is not wide enough, but you shouldn't have\r\n                    any problems using it on bigger devices. It also has a limit of 4 streams for the sake of\r\n                    maintaining reasonable sizes.\r\n                </Typography>\r\n\r\n                {/*FIRST TUTORIAL STEP*/}\r\n\r\n                <Typography component=\"h1\" variant=\"h3\" className={classes.guideStep}>\r\n                    1. Search the streams you want to watch\r\n                    <Typography component=\"h1\" variant=\"h6\" className={classes.guideStepContent}>\r\n                        Let's say you want to watch both Caps and Faker at the same time, but they are not group\r\n                        streaming.\r\n                    </Typography>\r\n                </Typography>\r\n\r\n                {/*SECOND TUTORIAL STEP*/}\r\n\r\n                <Typography component=\"h1\" variant=\"h3\" className={classes.guideStep}>\r\n                    2. Copy to your clipboard their Twitch names\r\n                    <Typography component=\"h1\" variant=\"h6\" className={classes.guideStepContent}>\r\n                        For example, if you want to watch Caps, writing or copying the \"caps\" part will suffice.<br/>\r\n                        <strong>twitch.tv/caps</strong>\r\n                    </Typography>\r\n                </Typography>\r\n\r\n                {/*THIRD TUTORIAL STEP*/}\r\n\r\n                <Typography component=\"h1\" variant=\"h3\" className={classes.guideStep}>\r\n                    3. Paste it into the stream input\r\n                    <Typography component=\"h1\" variant=\"h6\" className={classes.guideStepContent}>\r\n                        Once you have the twitch streamer name, click the button to open the input and paste it in\r\n                        there, click \"SET\", then you can close it.\r\n                    </Typography>\r\n                </Typography>\r\n\r\n                {/*FOURTH TUTORIAL STEP*/}\r\n\r\n                <Typography component=\"h1\" variant=\"h3\" className={classes.guideStep}>\r\n                    4. Initiate the streams\r\n                    <Typography component=\"h1\" variant=\"h6\" className={classes.guideStepContent}>\r\n                        Once you have all the streams set, click the \"STREAM\" button to start watching.\r\n                    </Typography>\r\n                </Typography>\r\n            </Grid>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n// EXPORT STATEMENT\r\n\r\nexport default TutorialSection","// IMPORT STATEMENTS\r\n\r\nimport React, {useState} from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n// STREAM PAGE COMPONENT FUNCTION\r\n\r\nfunction StreamPage(props) {\r\n\r\n    // REACT STATE HOOKS\r\n\r\n    const [currentChatInput, setCurrentChatInput] = useState(props.firstStream)\r\n\r\n    // CUSTOM MATERIAL UI STYLING\r\n\r\n    const useStyles = makeStyles(() => ({\r\n        root: {\r\n            height: \"100vh\",\r\n            width: \"100vw\",\r\n            backgroundColor: \"#262626\",\r\n        },\r\n        streamContainer: {\r\n            height: \"50vh\",\r\n            width: \"42.5vw\",\r\n            display: \"inline-block\",\r\n            padding: \"0\"\r\n        },\r\n        chatContainer: {\r\n            height: \"100vh\",\r\n            width: \"15vw\",\r\n            display: \"inline-block\",\r\n            padding: \"0\"\r\n        },\r\n        chatButton: {\r\n            backgroundColor: \"#6441a5\",\r\n            color: \"#b9a3e3\",\r\n            height: \"5vh\",\r\n            \"&:hover\": {\r\n                backgroundColor: \"#b9a3e3\",\r\n                color: \"#6441a5\",\r\n            }\r\n        }\r\n    }))\r\n\r\n    // CUSTOM STYLING CLASS CALLING\r\n\r\n    const classes = useStyles()\r\n\r\n    // CHANGE CHAT RENDER FUNCTIONS\r\n    // This is a simple function to handle the buttons\r\n    // that change which chat are you currently at\r\n\r\n    function handleFirstButton() {\r\n        setCurrentChatInput(props.firstStream)\r\n    }\r\n\r\n    function handleSecondButton() {\r\n        setCurrentChatInput(props.secondStream)\r\n    }\r\n\r\n    // RENDER STREAMS FUNCTION\r\n    // With the number of streams for rendering passed as a prop, this function\r\n    // renders the corresponding number of stream components depending of\r\n    // how many streams the user has set.\r\n\r\n    function renderStreams() {\r\n        if (props.howManyStreams === 1) {\r\n            return (\r\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" className={classes.root}>\r\n                    <CssBaseline/>\r\n                    <iframe\r\n                        title=\"First stream\"\r\n                        src={\"https://player.twitch.tv/?channel=\" + props.firstStream + \"&parent=darn0c.github.io\"}\r\n                        height=\"100%\"\r\n                        width=\"85%\"\r\n                        frameBorder=\"0\"\r\n                        scrolling=\"no\"\r\n                        allowFullScreen=\"true\">\r\n                    </iframe>\r\n                    <div className={classes.chatContainer}>\r\n                        <iframe\r\n                            title=\"Chat window\"\r\n                            frameBorder=\"0\"\r\n                            scrolling=\"no\"\r\n                            id=\"chat_embed\"\r\n                            src={\"https://www.twitch.tv/embed/\" + props.firstStream + \"/chat?parent=darn0c.github.io\"}\r\n                            height=\"100%\"\r\n                            width=\"100%\">\r\n                        </iframe>\r\n                    </div>\r\n                </Grid>\r\n            )\r\n        } else if (props.howManyStreams === 2) {\r\n            return (\r\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" className={classes.root}>\r\n                    <CssBaseline/>\r\n                    <div className={classes.streamContainer}>\r\n                        <iframe\r\n                            title=\"First stream\"\r\n                            src={\"https://player.twitch.tv/?channel=\" + props.firstStream + \"&parent=darn0c.github.io\"}\r\n                            height=\"100%\"\r\n                            width=\"100%\"\r\n                            frameBorder=\"0\"\r\n                            scrolling=\"no\"\r\n                            allowFullScreen=\"true\">\r\n                        </iframe>\r\n                    </div>\r\n                    <div className={classes.streamContainer}>\r\n                        <iframe\r\n                            title=\"Second stream\"\r\n                            src={\"https://player.twitch.tv/?channel=\" + props.secondStream + \"&parent=darn0c.github.io\"}\r\n                            height=\"100%\"\r\n                            width=\"100%\"\r\n                            frameBorder=\"0\"\r\n                            scrolling=\"no\"\r\n                            allowFullScreen=\"true\">\r\n                        </iframe>\r\n                    </div>\r\n                    <div className={classes.chatContainer}>\r\n                        <Button className={classes.chatButton} onClick={handleFirstButton}\r\n                                style={{width: \"50%\"}}>{props.firstStream}</Button>\r\n                        <Button className={classes.chatButton} onClick={handleSecondButton}\r\n                                style={{width: \"50%\"}}>{props.secondStream}</Button>\r\n                        <iframe\r\n                            title=\"Chat window\"\r\n                            frameBorder=\"0\"\r\n                            scrolling=\"no\"\r\n                            id=\"chat_embed\"\r\n                            src={\"https://www.twitch.tv/embed/\" + currentChatInput + \"/chat?parent=darn0c.github.io\"}\r\n                            height=\"95%\"\r\n                            width=\"100%\">\r\n                        </iframe>\r\n                    </div>\r\n                </Grid>\r\n            )\r\n        } else if (props.howManyStreams === 3) {\r\n            return (\r\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" className={classes.root}>\r\n                    <CssBaseline/>\r\n                    <div className={classes.streamContainer}>\r\n                        <iframe\r\n                            title=\"First stream\"\r\n                            src={\"https://player.twitch.tv/?channel=\" + props.firstStream + \"&parent=darn0c.github.io\"}\r\n                            height=\"100%\"\r\n                            width=\"100%\"\r\n                            frameBorder=\"0\"\r\n                            scrolling=\"no\"\r\n                            allowFullScreen=\"true\">\r\n                        </iframe>\r\n                    </div>\r\n                    <div className={classes.streamContainer}>\r\n                        <iframe\r\n                            title=\"Second stream\"\r\n                            src={\"https://player.twitch.tv/?channel=\" + props.secondStream + \"&parent=darn0c.github.io\"}\r\n                            height=\"100%\"\r\n                            width=\"100%\"\r\n                            frameBorder=\"0\"\r\n                            scrolling=\"no\"\r\n                            allowFullScreen=\"true\">\r\n                        </iframe>\r\n                    </div>\r\n                    <div className={classes.streamContainer}>\r\n                        <iframe\r\n                            title=\"Third stream\"\r\n                            src={\"https://player.twitch.tv/?channel=\" + props.thirdStream + \"&parent=darn0c.github.io\"}\r\n                            height=\"100%\"\r\n                            width=\"100%\"\r\n                            frameBorder=\"0\"\r\n                            scrolling=\"no\"\r\n                            allowFullScreen=\"true\">\r\n                        </iframe>\r\n                    </div>\r\n                </Grid>\r\n\r\n            )\r\n        } else if (props.howManyStreams === 4) {\r\n            return (\r\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" className={classes.root}>\r\n                    <CssBaseline/>\r\n                    <div className={classes.streamContainer}>\r\n                        <iframe\r\n                            title=\"First stream\"\r\n                            src={\"https://player.twitch.tv/?channel=\" + props.firstStream + \"&parent=darn0c.github.io\"}\r\n                            height=\"100%\"\r\n                            width=\"100%\"\r\n                            frameBorder=\"0\"\r\n                            scrolling=\"no\"\r\n                            allowFullScreen=\"true\">\r\n                        </iframe>\r\n                    </div>\r\n                    <div className={classes.streamContainer}>\r\n                        <iframe\r\n                            title=\"Second stream\"\r\n                            src={\"https://player.twitch.tv/?channel=\" + props.secondStream + \"&parent=darn0c.github.io\"}\r\n                            height=\"100%\"\r\n                            width=\"100%\"\r\n                            frameBorder=\"0\"\r\n                            scrolling=\"no\"\r\n                            allowFullScreen=\"true\">\r\n                        </iframe>\r\n                    </div>\r\n                    <div className={classes.streamContainer}>\r\n                        <iframe\r\n                            title=\"Third stream\"\r\n                            src={\"https://player.twitch.tv/?channel=\" + props.thirdStream + \"&parent=darn0c.github.io\"}\r\n                            height=\"100%\"\r\n                            width=\"100%\"\r\n                            frameBorder=\"0\"\r\n                            scrolling=\"no\"\r\n                            allowFullScreen=\"true\">\r\n                        </iframe>\r\n                    </div>\r\n                    <div className={classes.streamContainer}>\r\n                        <iframe\r\n                            title=\"Fourth stream\"\r\n                            src={\"https://player.twitch.tv/?channel=\" + props.fourthStream + \"&parent=darn0c.github.io\"}\r\n                            height=\"100%\"\r\n                            width=\"100%\"\r\n                            frameBorder=\"0\"\r\n                            scrolling=\"no\"\r\n                            allowFullScreen=\"true\">\r\n                        </iframe>\r\n                    </div>\r\n                </Grid>\r\n            )\r\n        }\r\n    }\r\n\r\n    // RETURN STATEMENT\r\n    // This is just a div for calling the function, the renderStream function\r\n    // makes all the work.\r\n\r\n    return (\r\n        <div>\r\n            {renderStreams()}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n// EXPORT STATEMENT\r\n\r\nexport default StreamPage","// IMPORT STATEMENTS\r\n\r\nimport React, {useState} from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {render} from \"react-dom\";\r\nimport StreamPage from \"./StreamPage\";\r\n\r\n// INPUT SECTION COMPONENT FUNCTION\r\n\r\nfunction InputSection() {\r\n\r\n    // REACT STATE HOOKS\r\n\r\n    // FIRST INPUT MENU STATE AND PLACEMENT\r\n\r\n    const [isFirstMenuOpen, setIsFirstMenuOpen] = useState(false);\r\n    const [firstMenuAnchorEl, setFirstMenuAnchorEl] = useState(false);\r\n\r\n    // FIRST INPUT TRACKING AND LOCKING\r\n\r\n    const [firstStreamInput, setFirstStreamInput] = useState(\"\");\r\n    const [isFirstStreamReady, setIsFirstStreamReady] = useState(false);\r\n\r\n    // SECOND INPUT MENU STATE AND PLACEMENT\r\n\r\n    const [isSecondMenuOpen, setIsSecondMenuOpen] = useState(false);\r\n    const [secondMenuAnchorEl, setSecondMenuAnchorEl] = useState(false);\r\n\r\n    // SECOND INPUT TRACKING AND LOCKING\r\n\r\n    const [secondStreamInput, setSecondStreamInput] = useState(\"\");\r\n    const [isSecondStreamReady, setIsSecondStreamReady] = useState(false);\r\n\r\n    // THIRD INPUT MENU STATE AND PLACEMENT\r\n\r\n    const [isThirdMenuOpen, setIsThirdMenuOpen] = useState(false);\r\n    const [thirdMenuAnchorEl, setThirdMenuAnchorEl] = useState(false);\r\n\r\n    // THIRD INPUT TRACKING AND LOCKING\r\n\r\n    const [thirdStreamInput, setThirdStreamInput] = useState(\"\");\r\n    const [isThirdStreamReady, setIsThirdStreamReady] = useState(false);\r\n\r\n    // FOURTH INPUT MENU STATE AND PLACEMENT\r\n\r\n    const [isFourthMenuOpen, setIsFourthMenuOpen] = useState(false);\r\n    const [fourthMenuAnchorEl, setFourthMenuAnchorEl] = useState(false);\r\n\r\n    // FOURTH INPUT TRACKING AND LOCKING\r\n\r\n    const [fourthStreamInput, setFourthStreamInput] = useState(\"\");\r\n    const [isFourthStreamReady, setIsFourthStreamReady] = useState(false);\r\n\r\n    // LOCKED STREAMS COUNTER FOR POSTERIOR RENDERING\r\n\r\n    let [streamCount, setStreamCount] = useState(0);\r\n\r\n    // OPEN FIRST MENU FUNCTION\r\n    // This is for handling all the buttons that open menus, keeping track\r\n    // of their state and being able to show corresponding icons.\r\n\r\n    function openFirstMenu(event) {\r\n        setIsFirstMenuOpen(!isFirstMenuOpen)\r\n        setFirstMenuAnchorEl(event.currentTarget)\r\n    }\r\n\r\n    // HANDLE FIRST MENU INPUT FUNCTION\r\n    // This if for keeping track of the value the user inputs and then\r\n    // render it's corresponding stream.\r\n\r\n    function handleFirstStreamInput(event) {\r\n        setFirstStreamInput(event.target.value)\r\n    }\r\n\r\n    // LOCK FIRST STREAM INPUT FUNCTION\r\n    // This is used for locking the input once the user has set the\r\n    // name of the streamer, adding it to the stream counter, and\r\n    // for easier handling of how many streams have to render.\r\n    // If the user tries to input nothing, it shows an alert\r\n    // saying that's not possible, making the user not able\r\n    // to manipulate and break the stream counter.\r\n\r\n    function lockFirstStream() {\r\n        if (firstStreamInput.length === 0) {\r\n            alert(\"You have to input something before you want to set it\")\r\n        } else if (firstStreamInput.length >= 1) {\r\n            setIsFirstStreamReady(true)\r\n            setStreamCount(streamCount + 1)\r\n            setIsFirstMenuOpen(false)\r\n        }\r\n    }\r\n\r\n    // OPEN SECOND MENU FUNCTION\r\n    // Idem first menu function\r\n\r\n    function openSecondMenu(event) {\r\n        setIsSecondMenuOpen(!isSecondMenuOpen)\r\n        setSecondMenuAnchorEl(event.currentTarget)\r\n    }\r\n\r\n    // HANDLE SECOND MENU INPUT FUNCTION\r\n    // Idem first menu input handler function\r\n\r\n    function handleSecondStreamInput(event) {\r\n        setSecondStreamInput(event.target.value)\r\n    }\r\n\r\n    // LOCK SECOND STREAM INPUT FUNCTION\r\n    // Idem first input lock function\r\n\r\n    function lockSecondStream() {\r\n        if (secondStreamInput.length === 0) {\r\n            alert(\"You have to input something before you want to set it\")\r\n        } else if (secondStreamInput.length >= 1) {\r\n            setIsSecondStreamReady(true)\r\n            setStreamCount(streamCount + 1)\r\n            setIsSecondMenuOpen(false)\r\n        }\r\n    }\r\n\r\n    // OPEN THIRD MENU FUNCTION\r\n    // Idem first menu function\r\n\r\n    function openThirdMenu(event) {\r\n        setIsThirdMenuOpen(!isThirdMenuOpen)\r\n        setThirdMenuAnchorEl(event.currentTarget)\r\n    }\r\n\r\n    // HANDLE THIRD MENU INPUT FUNCTION\r\n    // Idem first menu input handler function\r\n\r\n    function handleThirdStreamInput(event) {\r\n        setThirdStreamInput(event.target.value)\r\n    }\r\n\r\n    // LOCK THIRD STREAM INPUT FUNCTION\r\n    // Idem first input lock function\r\n\r\n    function lockThirdStream() {\r\n        if (thirdStreamInput.length === 0) {\r\n            alert(\"You have to input something before you want to set it\")\r\n        } else if (thirdStreamInput.length >= 1) {\r\n            setIsThirdStreamReady(true)\r\n            setStreamCount(streamCount + 1)\r\n            setIsThirdMenuOpen(false)\r\n        }\r\n    }\r\n\r\n    // OPEN FOURTH MENU FUNCTION\r\n    // Idem first menu function\r\n\r\n    function openFourthMenu(event) {\r\n        setIsFourthMenuOpen(!isFourthMenuOpen)\r\n        setFourthMenuAnchorEl(event.currentTarget)\r\n    }\r\n\r\n    // HANDLE FOURTH MENU INPUT FUNCTION\r\n    // Idem first menu input handler function\r\n\r\n    function handleFourthStreamInput(event) {\r\n        setFourthStreamInput(event.target.value)\r\n    }\r\n\r\n    // LOCK FOURTH STREAM INPUT FUNCTION\r\n    // Idem first input lock function\r\n\r\n    function lockFourthStream() {\r\n        if (fourthStreamInput.length === 0) {\r\n            alert(\"You have to input something before you want to set it\")\r\n        } else if (fourthStreamInput.length >= 1) {\r\n            setIsFourthStreamReady(true)\r\n            setStreamCount(streamCount + 1)\r\n            setIsFourthMenuOpen(false)\r\n        }\r\n    }\r\n\r\n    function startStreams() {\r\n\r\n        if (streamCount === 0) {\r\n            alert(\"You have to set a minimum of one stream to watch\")\r\n        } else if (streamCount >= 1) {\r\n            render(<StreamPage howManyStreams={streamCount}\r\n                               firstStream={firstStreamInput}\r\n                               secondStream={secondStreamInput}\r\n                               thirdStream={thirdStreamInput}\r\n                               fourthStream={fourthStreamInput}\r\n            />, document.getElementById(\"root\"))\r\n        }\r\n    }\r\n\r\n    // CUSTOM MATERIAL UI STYLING\r\n\r\n    const useStyles = makeStyles(() => ({\r\n        root: {\r\n            height: \"100vh\",\r\n            width: \"25vw\",\r\n        },\r\n        streamInputHeader: {\r\n            color: \"#b9a3e3\"\r\n        },\r\n        addStreamIcon: {\r\n            backgroundColor: \"#6441a5\",\r\n            color: \"#b9a3e3\",\r\n            \"&:hover\": {\r\n                backgroundColor: \"#b9a3e3\",\r\n                color: \"#6441a5\"\r\n            }\r\n        },\r\n        streamInput: {\r\n            backgroundColor: \"#b9a3e3\"\r\n        },\r\n        inputButton: {\r\n            backgroundColor: \"#6441a5\",\r\n            color: \"#b9a3e3\",\r\n            fontWeight: \"400\",\r\n            height: \"32px\",\r\n            \"&:hover\": {\r\n                backgroundColor: \"#b9a3e3\",\r\n                color: \"#6441a5\"\r\n            }\r\n        },\r\n        streamButton: {\r\n            backgroundColor: \"#6441a5\",\r\n            color: \"#f1f1f1\",\r\n            \"&:hover\": {\r\n                backgroundColor: \"#f1f1f1\",\r\n                color: \"#6441a5\",\r\n            }\r\n        }\r\n\r\n    }))\r\n\r\n    // MATERIAL UI CLASS CALLING\r\n\r\n    const classes = useStyles()\r\n\r\n    // RETURN STATEMENT\r\n\r\n    return (\r\n\r\n        // ROOT COMPONENT\r\n\r\n        <Grid container direction=\"column\" justify=\"space-evenly\" alignItems=\"center\" className={classes.root}>\r\n\r\n            {/*CURRENT STREAM COUNTER TO RENDER*/}\r\n            {/*This is for keeping track of how many streams need to render, and making sure\r\n            it's all working how it should.\r\n\r\n            <h1>{streamCount}</h1>*/}\r\n\r\n            {/*FIRST STREAM INPUT HEADER*/}\r\n\r\n            <Typography component=\"h1\" variant=\"h5\" className={classes.streamInputHeader}>\r\n                First Stream\r\n            </Typography>\r\n\r\n            {/*FIRST STREAM MENU BUTTON*/}\r\n\r\n            <IconButton onClick={openFirstMenu} className={classes.addStreamIcon}>\r\n                {isFirstMenuOpen ? <RemoveIcon/> : <AddIcon/>}\r\n            </IconButton>\r\n\r\n            {/*FIRST STREAM MENU POPPER*/}\r\n\r\n            <Popper open={isFirstMenuOpen} anchorEl={firstMenuAnchorEl}>\r\n\r\n                {/*FIRST STREAM MENU POPPER INPUT*/}\r\n\r\n                <TextField disabled={isFirstStreamReady} onChange={handleFirstStreamInput} value={firstStreamInput}\r\n                           className={classes.streamInput}/>\r\n\r\n                {/*FIRST STREAM MENU POPPER BUTTON */}\r\n\r\n                <Button disabled={isFirstStreamReady} onClick={lockFirstStream}\r\n                        className={classes.inputButton}>SET</Button>\r\n            </Popper>\r\n\r\n            {/*SECOND STREAM INPUT HEADER*/}\r\n\r\n            <Typography component=\"h1\" variant=\"h5\" className={classes.streamInputHeader}>\r\n                Second Stream\r\n            </Typography>\r\n\r\n            {/*SECOND STREAM MENU BUTTON*/}\r\n\r\n            <IconButton onClick={openSecondMenu} className={classes.addStreamIcon}>\r\n                {isSecondMenuOpen ? <RemoveIcon/> : <AddIcon/>}\r\n            </IconButton>\r\n\r\n            {/*SECOND STREAM MENU POPPER*/}\r\n\r\n            <Popper open={isSecondMenuOpen} anchorEl={secondMenuAnchorEl}>\r\n\r\n                {/*SECOND STREAM MENU POPPER INPUT*/}\r\n\r\n                <TextField disabled={isSecondStreamReady} onChange={handleSecondStreamInput} value={secondStreamInput}\r\n                           className={classes.streamInput}/>\r\n\r\n                {/*SECOND STREAM MENU POPPER BUTTON*/}\r\n\r\n                <Button disabled={isSecondStreamReady} onClick={lockSecondStream}\r\n                        className={classes.inputButton}>SET</Button>\r\n            </Popper>\r\n\r\n            {/*THIRD STREAM INPUT HEADER*/}\r\n\r\n            <Typography component=\"h1\" variant=\"h5\" className={classes.streamInputHeader}>\r\n                Third Stream\r\n            </Typography>\r\n\r\n            {/*THIRD STREAM MENU BUTTON*/}\r\n\r\n            <IconButton onClick={openThirdMenu} className={classes.addStreamIcon}>\r\n                {isThirdMenuOpen ? <RemoveIcon/> : <AddIcon/>}\r\n            </IconButton>\r\n\r\n            {/*THIRD STREAM MENU POPPER*/}\r\n\r\n            <Popper open={isThirdMenuOpen} anchorEl={thirdMenuAnchorEl}>\r\n\r\n                {/*THIRD STREAM MENU POPPER INPUT*/}\r\n\r\n                <TextField disabled={isThirdStreamReady} onChange={handleThirdStreamInput} value={thirdStreamInput}\r\n                           className={classes.streamInput}/>\r\n\r\n                {/*THIRD STREAM MENU POPPER BUTTON*/}\r\n\r\n                <Button disabled={isThirdStreamReady} onClick={lockThirdStream}\r\n                        className={classes.inputButton}>SET</Button>\r\n            </Popper>\r\n\r\n            {/*FOURTH STREAM INPUT HEADER*/}\r\n\r\n            <Typography component=\"h1\" variant=\"h5\" className={classes.streamInputHeader}>\r\n                Fourth Stream\r\n            </Typography>\r\n\r\n            {/*FOURTH STREAM MENU BUTTON*/}\r\n\r\n            <IconButton onClick={openFourthMenu} className={classes.addStreamIcon}>\r\n                {isFourthMenuOpen ? <RemoveIcon/> : <AddIcon/>}\r\n            </IconButton>\r\n\r\n            {/*FOURTH STREAM MENU POPPER*/}\r\n\r\n            <Popper open={isFourthMenuOpen} anchorEl={fourthMenuAnchorEl}>\r\n\r\n                {/*FOURTH STREAM MENU POPPER INPUT*/}\r\n\r\n                <TextField disabled={isFourthStreamReady} onChange={handleFourthStreamInput} value={fourthStreamInput}\r\n                           className={classes.streamInput}/>\r\n\r\n                {/*FOURTH STREAM MENU POPPER BUTTON*/}\r\n\r\n                <Button disabled={isFourthStreamReady} onClick={lockFourthStream}\r\n                        className={classes.inputButton}>SET</Button>\r\n            </Popper>\r\n\r\n            {/*RENDER STREAMS BUTTON*/}\r\n\r\n            <Button onClick={startStreams} className={classes.streamButton}>\r\n                STREAM\r\n            </Button>\r\n        </Grid>\r\n    )\r\n\r\n}\r\n\r\n// EXPORT STATEMENT\r\n\r\nexport default InputSection","// IMPORT STATEMENTS\r\n\r\nimport React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TutorialSection from \"./TutorialSection\"\r\nimport InputSection from \"./InputSection\";\r\n\r\n// LANDING PAGE COMPONENT FUNCTION\r\n\r\nfunction LandingPage() {\r\n\r\n    // CUSTOM MATERIAL UI STYLING\r\n\r\n    const useStyles = makeStyles(() => ({\r\n        root: {\r\n            height: \"100vh\",\r\n            backgroundColor: \"#262626\",\r\n        }\r\n    }))\r\n\r\n    // MATERIAL UI CLASS CALLING\r\n\r\n    const classes = useStyles()\r\n\r\n    // RETURN STATEMENT\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            {/*ROOT COMPONENT*/}\r\n\r\n            <Grid container direction=\"column\" justify=\"space-evenly\" alignItems=\"center\" className={classes.root}>\r\n                <CssBaseline/>\r\n\r\n                {/*RENDER TUTORIAL COMPONENT*/}\r\n\r\n                <TutorialSection/>\r\n\r\n                {/*RENDER INPUT COMPONENT*/}\r\n\r\n                <InputSection/>\r\n            </Grid>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n// EXPORT STATEMENT\r\n\r\nexport default LandingPage","// IMPORT STATEMENTS\r\n\r\nimport React from \"react\";\r\nimport LandingPage from \"./LandingPage\";\r\n\r\n// MAIN APP COMPONENT FUNCTION\r\n\r\nfunction App () {\r\n\r\n    // RETURN STATEMENT\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            {/*RENDER LANDING PAGE COMPONENT*/}\r\n\r\n            <LandingPage/>\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n// EXPORT STATEMENT\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}